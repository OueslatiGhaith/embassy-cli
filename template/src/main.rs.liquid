#![no_std]
#![no_main]
#![feature(type_alias_impl_trait)]

use defmt::*;
use embassy_executor::Spawner;
use embassy_time::{Duration, Timer};
use {defmt_rtt as _, panic_probe as _};

#[embassy_executor::main]
async fn main(_spawner: Spawner) {
{% if vendor == "ST" -%}
    let p = embassy_stm32::init(Default::default());
{% elsif vendor == "Nordic" -%}
    let p = embassy_nrf::init(Default::default());
{% elsif vendor == "Raspberry" -%}
    let p = embassy_rp::init(Default::default());
{% endif %}    

    info!("Hello World!");

    loop {
        Timer::after(Duration::from_millis(500)).await;
        info!("Hello!");
    }
}
